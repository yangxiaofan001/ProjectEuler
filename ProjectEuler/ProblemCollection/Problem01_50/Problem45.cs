using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EulerProject.ProblemCollection
{
    public class Problem45 : ProblemBase
    {
        public override int ProblemNumber
        {
            get
            {
                return 45;
            }
        }

        public override string Description
        {
            get
            {
                return @"
                    Triangular, pentagonal, and hexagonal
                    Problem 45
                    Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

                    Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
                    Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
                    Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
                    It can be verified that T285 = P165 = H143 = 40755.

                    Find the next triangle number that is also pentagonal and hexagonal.
                    ";
            }
        }

        public override string Solution1()
        {
            long tIndex = 286;
            long pIndex = 166;
            long hIndex = 144;

            long t = tIndex * (tIndex + 1) / 2;
            long p = pIndex * (3 * pIndex - 1) / 2;
            long h = hIndex * (2 * hIndex - 1);

            long max = Math.Max(t, Math.Max(p, h));

            while (p != h)
            {
                while (t < max)
                    t = (++tIndex) * (tIndex + 1) / 2;
                max = t;

                while (p < max)
                    p = (++pIndex) * (3 * pIndex - 1) / 2;
                max = p;

                while (h < max)
                    h = (++hIndex) * (2 * hIndex - 1);
                max = h;
            }

            return p.ToString() + " = " + "T" + tIndex + " = " + "P" + pIndex + " = H" + hIndex;
        }
    }
}
