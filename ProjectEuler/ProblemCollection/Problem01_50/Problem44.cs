using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EulerProject.ProblemCollection
{
    public class Problem44 : ProblemBase
    {
        public override int ProblemNumber
        {
            get
            {
                return 44;
            }
        }

        public override string Description
        {
            get
            {
                return @"
                    Pentagon numbers
                    Problem 44
                    Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

                    1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

                    It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

                    Find the pair of pentagonal numbers, Pj and Pk, 
                    for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
                    ";  
            }
        }

        public override string Solution1()
        {
            bool bFound = false;
            int n = 2;
            int answer = 0;

            int answerm = 0;
            int answern = 0;

            int nSum = -1;
            int nDiff = -1;

            int sum = 0;
            int diff = 0;

            while (!bFound)
            {
                int pn = 0;
                pn = n * (3 * n - 1) / 2;

                for (int m = 1; m < n; m++)
                {
                    int pm = m * (3 * m - 1) / 2;

                    sum = pn + pm;
                    diff = pn - pm;

                    nSum = IsPentagonalNumber(sum);
                    nDiff = IsPentagonalNumber(diff);

                    // PentagonalNumberList.Contains() costs much more time
                    if (nSum > 0 && nDiff > 0)
                    {
                        bFound = true;
                        answer = diff;

                        answerm = m;
                        answern = n;
                        break;
                    }
                }

                n++;
            }

            StringBuilder sbAnswer = new StringBuilder();
            sbAnswer.Append("\np(");
            sbAnswer.Append(answern.ToString());
            sbAnswer.Append(") ");
            sbAnswer.Append(" + p(");
            sbAnswer.Append(answerm.ToString());
            sbAnswer.Append(") ");
            sbAnswer.Append(" = p(");
            sbAnswer.Append(nSum.ToString());
            sbAnswer.Append(") ");
            sbAnswer.Append(sum.ToString());
            sbAnswer.Append("\n");

            sbAnswer.Append("p(");
            sbAnswer.Append(answern.ToString());
            sbAnswer.Append(") ");
            sbAnswer.Append(" - p(");
            sbAnswer.Append(answerm.ToString());
            sbAnswer.Append(") ");
            sbAnswer.Append(" = p(");
            sbAnswer.Append(nDiff.ToString());
            sbAnswer.Append(") ");
            sbAnswer.Append(diff.ToString());
            sbAnswer.Append("\n");


            return sbAnswer.ToString();
        }

        int IsPentagonalNumber(int p)
        {
            int n = (int)(Math.Ceiling(Math.Sqrt(p * 2 / 3)));

            while (true)
            {
                int pn = n * (3 * n - 1) / 2;
                if (pn == p)
                    return n;
                if (pn > p)
                    return -1;

                n++;
            }
        }
    }
}
